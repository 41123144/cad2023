var tipuesearch = {"pages": [{'title': 'About', 'text': ' https://github.com/mdecycu/cmsite  \n', 'tags': '', 'url': 'About.html'}, {'title': '課程簡述', 'text': '', 'tags': '', 'url': '課程簡述.html'}, {'title': 'W4-W5', 'text': '1.建立考試帳號 \n 2.建立Github帳號的cad2023倉儲 \n 3.用Repit編輯cad2023 \n 4.自選繪圖軟體 \n 5.使用CoppeliaSim模擬 \n', 'tags': '', 'url': 'W4-W5.html'}, {'title': 'W6-W7', 'text': '1.進行分組(三人小組,九人大組) \n 2.獲取個人ipv6位址 \n 3.建立組別倉儲 \n 4. 完成任務一零組件繪圖 \n 5.使用可攜維護cad2023倉儲 \n', 'tags': '', 'url': 'W6-W7.html'}, {'title': 'W8-W10', 'text': '1.使用 s1511.cycu.org 管理個人與分組網站 \n 2.獲取個人外部與內部埠號 \n 3.製作各組作業 \n 4.使用CoppeliaSim模擬 \n 5.學習win使用方法 \n', 'tags': '', 'url': 'W8-W10.html'}, {'title': 'W12-W15', 'text': '1.與ChatGPT對話 \n 2.填入個人座次表 \n 3.列出座位排序表 \n 4.繪製零件圖 \n 5.操作CoppeliaSim進行模擬 \n', 'tags': '', 'url': 'W12-W15.html'}, {'title': 'hw', 'text': '', 'tags': '', 'url': 'hw.html'}, {'title': 'Replit', 'text': '利用 Replit 維護 Github 倉儲網站的步驟: \n \n Connect Github to replit\xa0 (目的在讓導入 Replit 的倉儲具有推回 (git push) Github 對應帳號的權限) \n Import repository tp replit\xa0 (選擇倉儲所使用的程式 Python 語言, 可以直接在 Replit 執行網頁編輯程式) \n 手動取下與倉儲對應的子模組: git submodule update --init --recursive (假如連主倉儲內容與子模組全部手動取下資料, 則可使用 git clone --recurse-submodules 然後接 https 或 SSH 倉儲網址) \n Run Github repository on Replit\xa0 (Run Github repository on Replit由於從 Github 導入 Replit, 並沒有倉儲子模組的內容必須手動導入, 且以 pip 安裝執行 cmsimde 網頁編輯程式所需的模組, 其中包括 flask flask_cors bs4 lxml markdown pelican gevent 等) \n 以 Run 執行動態網站, 以編輯表單中的 config 設定管理者密碼後, 將 config/config 編碼字串移至 secrets 工具中的 config 變數, 然後刪除倉儲中的 config/config 檔案, 以 Stop 關閉動態網站後, 重新以 Run 執行動態網站, 測試是否可以採新修改的管理者密碼登入動態網站. \n 利用 cmsimde 動態網站功能修改內容後, 以 Convert 將資料轉為靜態網頁後, 回到 Replit 以 Git 工具進行內容的新增、提交與推送至對應的 Github 倉儲. \n \n', 'tags': '', 'url': 'Replit.html'}, {'title': 's1511', 'text': '需要先設定 key 與 session config,才能將倉儲以 SSH clone 至個人帳號下, 修改個人或分組所分配到的內部連網埠號後, 以 python3 server.py 執行網頁編輯. 成功後才可透過 acp 讓動態與靜態網站內容同步. \n', 'tags': '', 'url': 's1511.html'}, {'title': 'localhost', 'text': '可以使用 s1511 中的 private key, 經由 puttygen 轉檔後使用, 以 SSH clone 至個人隨身碟後,利用 cms 啟動編輯網站, 修改內容並轉為靜態網站後, 以 acp 將改版資料新增提交推送到 Github. 若修改倉儲中的 init.py, 置入所在電腦的外部 IPv6 位址, 則可以 cms 啟動後, 修改管理者密碼, 讓其他組員連線至所啟動的動態或靜態網站內容. \n', 'tags': '', 'url': 'localhost.html'}, {'title': '網路設定', 'text': '由於電腦輔助設計室某部分套件,在IPv4網路環境下會被防毒軟體偵測到封包異常而封閉網路,因此以將IPv4網路關\xa0 閉,僅使用IPv6,並透過雙網路協定支援的代理主機設定,以便與僅支援IPv4的網路主機連 線.\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0\xa0 \n 在課堂中則利用隨身碟上的批次檔案進行電腦輔助設計室網路環境設定 . \n', 'tags': '', 'url': '網路設定.html'}, {'title': '任務', 'text': '', 'tags': '', 'url': '任務.html'}, {'title': 'onshape', 'text': '註冊onshape與展示網站頁面 \n \n', 'tags': '', 'url': 'onshape.html'}, {'title': '繪圖', 'text': '專案一 \n \n 專案二 \n \n 繪製過程\xa0 https://studio.youtube.com/video/d7K9doZEZOg/edit \n', 'tags': '', 'url': '繪圖.html'}, {'title': '模擬', 'text': '圖檔無法匯入 \n', 'tags': '', 'url': '模擬.html'}, {'title': '座位表', 'text': '\n \n \n \xa0(1,1) 41123123 \n \xa0(1,2) 41123119 \n \xa0(1,3) 41123105 \n \xa0(1,4) 41123152 \n \xa0(1,5) 41123120 \n \xa0(1,6) 41123108 \n \xa0(1,7) 41123145 \n \xa0(1,8) 41123137 \n \xa0(1,9) 41123130 \n \n \n \xa0(2,1) 41123140 \n \xa0(2,2) 41123150 \n \xa0(2,3) 41123124 \n 空位 \n \xa0(2,5) 41136123 \n \xa0(2,6) 41123148 \n \xa0(2,7) 41123116 \n \xa0(2,8) 41123146 \n 空位 \n \n \n \xa0(3,1) 41123139 \n \xa0(3,2) 41123131 \n \xa0(3,3) 41123135 \n \xa0(3,4) 41123149 \n \xa0(3,5) 41123122 \n \xa0(3,6) 41123134 \n \xa0(3,7) 41123107 \n \xa0(3,8) 41123101 \n \xa0(3,9) 41123102 \n \n \n \xa0(4,1) 41123128 \n \xa0(4,2) 41123117 \n \xa0(4,3) 41123114 \n \xa0(4,4) 41123126 \n \xa0(4,5) 41123115 \n \xa0(4,6) 41123111 \n 空位 \n \xa0(4,8) 41123112 \n 空位 \n \n \n \xa0(5,1) 41123144 \n \xa0(5,2) 41123141 \n \xa0(5,3) 41123143 \n \xa0(5,4) 41123129 \n 空位 \n 空位 \n \xa0(5,7) 41023134 \n \xa0(5,8) 41023156 \n \xa0(5,9) 41023155 \n \n \n \xa0(6,1) 40923118 \n \xa0(6,2) 41123154 \n \xa0(6,3) 41123153 \n 空位 \n \xa0(6,5) 41023245 \n \xa0(6,6) 41023246 \n 空位 \n \xa0(6,8) 40923127 \n \xa0(6,9) 40923213 \n \n \n \n', 'tags': '', 'url': '座位表.html'}, {'title': '總結與心得', 'text': '期望分數:60 \n A: 是否按照進度明確標示倉儲的改版歷程 :是 \n B: 是否根據 \xa0 IPv4 與 IPv6 \xa0 網路環境設定進行作法討論 :是 \n C: 是否就 \xa0 Replit、s.cycu.org 與 localhost \xa0 情境下對個人與分組倉儲進行設定操作 :是 \n D: 是否就所分配的 \xa0 CAD 套件 從安裝設定到繪圖提供內容參考 :是 \n E: 是否使用所分配的 CAD 套件完成 專案一零組件繪圖 , 並提供零組件下載 :否 \n F: 是否將自行繪製的專案一零組件 轉入 CoppeliaSim :嘗試但失敗 \n G: 是否利用 \xa0 ZMQ Remote API Python \xa0 對專案一轉入的零組件設定感測器, 並進行 鋼球永動模擬 :否 \n H: 是否實際操作 \xa0 Triangle 軌道系統 的鋼球永動模擬 :否 \n I: 是否完成 W15 的平面雙 U 迴路上的 鋼球永動系統繪圖、轉檔與系統模擬 :部份完成 \n J: 是否使用所分配的 CAD 套件完成 專案二 1D 平台零組件繪圖 , 並提供零組件下載 :否 \n K: 是否利用 \xa0 ZMQ Remote API Python \xa0 對專案二轉入的零組件設定感測器, 並進行鋼球永動模擬 :否 \n L: 是否針對專案二的 1D 平台鋼球平衡系統所需的 \xa0 PID 控制理論 進行資料收集與 ChatGPT 對答\xa0 \n 心得:課程中期遇到s1511無法架設網站的情況,所幸Replit尚可使用,但繪製的圖檔轉不進CoppeliaSim,因此無法嘗試模擬 \n', 'tags': '', 'url': '總結與心得.html'}, {'title': 'Brython', 'text': 'https://en.wikipedia.org/wiki/Python_(programming_language) \n Examples: \n https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d \n https://www.geeksforgeeks.org/python-programming-examples/ \n https://www.programiz.com/python-programming/examples \n https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/ \n Python Tutorial: \n https://docs.python.org/3/tutorial/ \n An informal introduction to Python \n Indentation (Python 採 4 個 Spaces 縮排, 以界定執行範圍) \n Variables ( Python Keywords ) \n Comments (# 單行註解, 三個單引號或三個雙引號標註多行註解) \n Numbers  (整數 int(), 浮點數 float()) \n Strings  (字串) \n print (Python 內建函式,  print()  函式) \n Python control flow tools \n for \n if \n range \n open \n read \n lists \n tuples \n dictionaries \n functions \n try ... except \n break \n pass \n classes \n 這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 ( practice_html.txt  動態頁面超文件). \n practice_html.txt  動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用. \n 亦即將所有對應的 html 也使用 Brython 產生, 然後寫為  class  後, 在範例導入時透過  instance  引用. \n <!-- 啟動 Brython -->\n<script>\nwindow.onload=function(){\nbrython({debug:1, pythonpath:[\'./../cmsimde/static/\',\'./../downloads/py/\']});\n}\n</script> \n 從 1 累加到 100: \n 1 add to 100 \n 將 iterable 與 iterator  相關說明 , 利用 Brython 與 Ace Editor 整理在這個頁面. \n  導入 brython 程式庫  \n \n \n \n \n  啟動 Brython  \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n \n \n \n  add 1 to 100 開始  \n \n \n  add 1 to 100 結束 \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor1 結束   ##########################################  \n 從 1 累加到 100 part2: \n 1 add to 100 cango_three_gears BSnake AI Tetris Rotating Block \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  add 1 to 100 part2 開始  \n \n \n  add 1 to 100 part2 結束 \n  editor2 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor2 結束  \n \n \n', 'tags': '', 'url': 'Brython.html'}]};